type ServerId: 1..5;

type Token: either {
  AtServer {
    at: ServerId,
  },
  InTransit {
    from: ServerId,
    to: ServerId,
  },
}
var token: Token;

type Server: record {
  hasToken: Boolean,
}

var servers: Array<Server>[ServerId];
servers[1].hasToken = True;

rule deliverToken {
  match token {
    InTransit as transit => {
      servers[transit.to].hasToken = True;
      token = AtServer { at: transit.to };
    },
    AtServer => {
    },
  }
}

rule passToken for id, server in servers {
  if server.hasToken {
    var next : ServerId = id % 5 + 1;
    token = InTransit {
      from: id,
      to: next,
    };
    server.hasToken = False;
  }
}
